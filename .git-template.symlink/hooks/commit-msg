#!/bin/bash
TICKET_PATTERN='# Jira Ticket: \[([A-z]+[0-9]*-[0-9]+)\]'
if [[ "$(cat ${1})" =~ ${TICKET_PATTERN} && "${BASH_REMATCH[1]}" ]]; then
	TICKET_ID=${BASH_REMATCH[1]}
	read -r LINE MSG <<< "$(grep -En '^[^#]+' "$1" | sed 's/:/ /')"
	if [[ "${MSG}" ]]; then
		DESCRIPTION="$(cat "$1" | sed "1,${LINE}d")"
		printf '%s: %s\n\n%s' "${TICKET_ID}" "${MSG}" "${DESCRIPTION}" > "$1"
	fi
fi

GIT_WORKING_DIR=$(git rev-parse --show-toplevel)
GRUMPHP_CONFIGURATION=${GIT_WORKING_DIR}/grumphp.yml
# Only run GrumPHP if a configuration has been defined.
if [[ -f "${GRUMPHP_CONFIGURATION}" ]]; then
	VENDOR_DIR="${GIT_WORKING_DIR}/vendor"
	# Find GrumPHP and run it if it exists.
	test -d ${VENDOR_DIR} && GRUMPHP=(`find ${VENDOR_DIR} -type f -name grumphp`)
	if [[ "${GRUMPHP}" ]]; then
		export GRUMPHP_GIT_WORKING_DIR=${GIT_WORKING_DIR}
		cd ${GRUMPHP_GIT_WORKING_DIR}
		GIT_USER=$(git config user.name)
		GIT_EMAIL=$(git config user.email)
		COMMIT_MSG_FILE=$1
		EXEC_GRUMPHP_COMMAND="exec"
		# Check for a EXEC_GRUMPHP_COMMAND override in the configuration.
		CONFIGURED_EXEC_GRUMPHP_COMMAND="$(grep -e 'EXEC_GRUMPHP_COMMAND:' "${GRUMPHP_CONFIGURATION}")"
		if [[ "${CONFIGURED_EXEC_GRUMPHP_COMMAND}" ]]; then
			# Grap the captured command and remove any wrapping single or double quotes.
			CONFIGURED_EXEC_GRUMPHP_COMMAND="$(echo "${CONFIGURED_EXEC_GRUMPHP_COMMAND}" | awk '{ print $2 }' | sed -E s/\[\'\"\]//g)"
			if [[ "${CONFIGURED_EXEC_GRUMPHP_COMMAND}" ]]; then
				EXEC_GRUMPHP_COMMAND="${CONFIGURED_EXEC_GRUMPHP_COMMAND}"
			fi
		fi
		# Fetch the GIT diff and format it as command input:
		DIFF=$(git -c diff.mnemonicprefix=false --no-pager diff -r -p -m -M --full-index --no-color --staged | cat)
		# Grumphp env vars
		(cd "./" && printf "%s\n" "${DIFF}" | "${EXEC_GRUMPHP_COMMAND}" "${GRUMPHP}" 'git:commit-msg' "--git-user='$GIT_USER'" "--git-email='$GIT_EMAIL'" "$COMMIT_MSG_FILE")
	fi
fi
exit 0
